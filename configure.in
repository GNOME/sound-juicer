# Initial blurb
AC_INIT(sound-juicer, 0.5.14, http://www.burtonini.com/)
AC_PREREQ(2.52)
AM_INIT_AUTOMAKE([check-news 1.6])
AC_CONFIG_SRCDIR(src/sj-extractor.c)
AM_CONFIG_HEADER(src/config.h)
AM_MAINTAINER_MODE

# Honour user-set aclocal flags
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"


# Do the gettext/i18n stuff
GETTEXT_PACKAGE=sound-juicer
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The name of the gettext package.])
AC_SUBST(GETTEXT_PACKAGE)
ALL_LINGUAS="ar az be bg ca cs da de el en_CA en_GB es eu fi fr gu hr hu it ja ko lt mk ml ms nb nl no pa pl pt pt_BR ru sq sr sr@Latn sv th tr uk zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT


# Standard C and C++ compiler mojo
AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_CXX
AC_PROG_INTLTOOL([0.20])


# Find GLib and GObject
PKG_CHECK_MODULES(GLIB, glib-2.0 gthread-2.0 gobject-2.0)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

# Find the UI libraries
PKG_CHECK_MODULES(UI, gtk+-2.0 >= 2.4  libglade-2.0  gconf-2.0  libgnomeui-2.0)
AC_SUBST(UI_CFLAGS)
AC_SUBST(UI_LIBS)

# Find GStreamer.
HAVE_GSTREAMER=no
                                                                                
# Look for 0.8
PKG_CHECK_MODULES(GSTREAMER, gstreamer-0.8 gstreamer-gconf-0.8, HAVE_GSTREAMER=yes, HAVE_GSTREAMER=no)
if test "x$HAVE_GSTREAMER" = "xyes"; then
        AC_DEFINE(GSTREAMER_0_8, 1, [GStreamer 0.8])
else
        AC_MSG_ERROR([GStreamer 0.8 not found])
fi

# If we get here we found a GStreamer we can use
AC_SUBST(GSTREAMER_CFLAGS)
AC_SUBST(GSTREAMER_LIBS)

# Find the GStreamer elements we use, and warn if they are not present.
AM_GST_ELEMENT_CHECK(cdparanoia,,AC_MSG_WARN([The 'cdparanoia' element was not found. This will cause Sound Juicer to fail at runtime.]))
AM_GST_ELEMENT_CHECK(vorbisenc,,AC_MSG_WARN([The 'vorbisenc' element was not found. This will cause encoding to Ogg Vorbis to fail.]))
AM_GST_ELEMENT_CHECK(flacenc,,AC_MSG_WARN([The 'flacenc' element was not found. This will cause encoding to FLAC to fail.]))
AM_GST_ELEMENT_CHECK(wavenc,,AC_MSG_WARN([The 'wavenc' element was not found. This will cause encoding to Wave to fail.]))
AM_GST_ELEMENT_CHECK(filesink,,AC_MSG_WARN([The 'filesink' element was not found. This will cause Sound Juicer to fail at runtime.]))

# Linux/HAL support
# Stolen from nautilus-cd-burner
HAL_REQUIRED=0.2.98
AC_ARG_ENABLE(hal, AC_HELP_STRING([--enable-hal],[use hal, if available]),
[case "${enableval}" in
yes) ENABLE_HAL=yes ;;
no)  ENABLE_HAL=no ;;
*) AC_MSG_ERROR(bad value ${enableval} for --enable-hal) ;;
esac],
[ENABLE_HAL=no]) dnl Default value

AC_MSG_CHECKING([whether to use HAL])
if test "x$ENABLE_HAL" = "xyes"; then
        AC_MSG_RESULT([yes])
       AC_DEFINE([USE_HAL], 1, [Use the HAL library])
       PKG_CHECK_MODULES(HAL, hal >= $HAL_REQUIRED)
       AC_SUBST(HAL_CFLAGS)
       AC_SUBST(HAL_LIBS)
else
        AC_MSG_RESULT([no. Pass --enable-hal to use HAL.])
fi

# Find GNOME Media Profiles
PKG_CHECK_MODULES(MEDIA_PROFILES, gnome-media-profiles)
AC_SUBST(MEDIA_PROFILES_CFLAGS)
AC_SUBST(MEDIA_PROFILES_LIBS)

# Find MusicBrainz
PKG_CHECK_MODULES(MUSICBRAINZ, libmusicbrainz >= 2.0.0)
AC_SUBST(MUSICBRAINZ_CFLAGS)
AC_SUBST(MUSICBRAINZ_LIBS)


# Find how and where to put the GConf schemas
AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
if test x"$GCONFTOOL" = xno; then
        AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi
AM_GCONF_SOURCE_2


# Optionally enable a hack so that no CD-ROMs being found is not fatal. Yes, I
# use this because I code on my CD-less laptop.
AC_MSG_CHECKING([whether to ignore missing CD-ROM errors])
AC_ARG_ENABLE(ignore-missing-cd,
        [AC_HELP_STRING([--enable-ignore-missing-cd],[Ignore missing CD-ROM])],
        AC_MSG_RESULT([yes]) AC_DEFINE(IGNORE_MISSING_CD, 1, [Ignore missing CD-ROM drives]),
        AC_MSG_RESULT([no])
        )


# Optionally enable G* deprecations
AC_MSG_CHECKING([whether to enable deprecation warnings])
AC_ARG_ENABLE(deprecations,
        [AC_HELP_STRING([--enable-deprecations],
        [enable deprecation warnings [default=no]])],,
        [enable_deprecations=no])
if test "x$enable_deprecations" = "xyes"; then
        AC_MSG_RESULT([yes])
        DISABLE_DEPRECATED_CFLAGS="\
                -DG_DISABLE_DEPRECATED  -DGDK_DISABLE_DEPRECATED \
                -DGTK_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED \
                -DGCONF_DISABLE_DEPRECATED -DGNOME_DISABLE_DEPRECATED"
        AC_SUBST(DISABLE_DEPRECATED_CFLAGS)
else
        AC_MSG_RESULT([no])
fi


# We require Scroll Keeper 0.3.5 or above for the help
SCROLLKEEPER_BUILD_REQUIRED=0.3.5
AC_SUBST(SCROLLKEEPER_BUILD_REQUIRED)


# Finally, generate the files
AC_OUTPUT([
sound-juicer.spec
Makefile
help/Makefile
help/sound-juicer/Makefile
help/sound-juicer/C/Makefile
data/Makefile
po/Makefile.in
src/Makefile
tests/Makefile
])
