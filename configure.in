AC_INIT([Sound Juicer],[2.28.1],[http://bugzilla.gnome.org/enter_bug.cgi?product=sound-juicer],[sound-juicer])

AC_PREREQ(2.52)

AM_INIT_AUTOMAKE([1.9 no-dist-gzip dist-bzip2 check-news])
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_SRCDIR([libjuicer/sj-extractor.c])
AM_CONFIG_HEADER([config.h])

# Enable silent build when available (Automake 1.11)
m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])

GNOME_COMMON_INIT

# Do the gettext/i18n stuff
GETTEXT_PACKAGE=sound-juicer
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The name of the gettext package.])
AC_SUBST(GETTEXT_PACKAGE)
AM_GLIB_GNU_GETTEXT


# Standard C and C++ compiler mojo
AC_ISC_POSIX
AM_PROG_CC_C_O
AC_HEADER_STDC
AC_PROG_CXX
AC_PROG_LIBTOOL
AC_PROG_INSTALL
IT_PROG_INTLTOOL([0.40.0], [no-xml])

GNOME_COMPILE_WARNINGS([maximum])
GNOME_CXX_WARNINGS
GNOME_DEBUG_CHECK
GNOME_MAINTAINER_MODE_DEFINES

AC_CHECK_FUNC(socket,,[AC_CHECK_LIB(socket,socket)])

# Use the GNOME documentation framework
GNOME_DOC_INIT

# Find GLib and GObject
PKG_CHECK_MODULES(GLIB, glib-2.0 >= 2.18 gthread-2.0 gobject-2.0)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

# Find libbrasero-media
PKG_CHECK_MODULES(BURN, libbrasero-media >= 0.9.1)
AC_SUBST(BURN_CFLAGS)
AC_SUBST(BURN_LIBS)

# Set a flag if we have _can_eject, added in 2.21.5.
# oldlibs=$LIBS
LIBS="$LIBS $BURN_LIBS"
# AC_CHECK_FUNCS(nautilus_burn_drive_can_eject)
# LIBS="$oldlibs"

# Find the UI libraries
PKG_CHECK_MODULES(UI, gtk+-2.0 >= 2.14  libglade-2.0  gconf-2.0 gio-2.0 gmodule-export-2.0 dbus-glib-1 libcanberra-gtk)
AC_SUBST(UI_CFLAGS)
AC_SUBST(UI_LIBS)

PKG_CHECK_MODULES(GSTREAMER, gstreamer-0.10 >= 0.10.15 gstreamer-plugins-base-0.10)
AC_SUBST(GSTREAMER_CFLAGS)
AC_SUBST(GSTREAMER_LIBS)

# Find the GStreamer elements we use, and warn if they are not present.
AM_GST_ELEMENT_CHECK(vorbisenc,,AC_MSG_WARN([The 'vorbisenc' element was not found. This will cause encoding to Ogg Vorbis to fail.]))
AM_GST_ELEMENT_CHECK(flacenc,,AC_MSG_WARN([The 'flacenc' element was not found. This will cause encoding to FLAC to fail.]))
AM_GST_ELEMENT_CHECK(wavenc,,AC_MSG_WARN([The 'wavenc' element was not found. This will cause encoding to Wave to fail.]))
AM_GST_ELEMENT_CHECK(giosink,,AC_MSG_WARN([The 'giosink' element was not found. This will cause Sound Juicer to fail at runtime.]))

# Find GNOME Media Profiles
PKG_CHECK_MODULES(MEDIA_PROFILES, gnome-media-profiles >= 2.11.91)
AC_SUBST(MEDIA_PROFILES_CFLAGS)
AC_SUBST(MEDIA_PROFILES_LIBS)

# Find optional libcdio
PKG_CHECK_MODULES([CDIO],[libcdio >= 0.70], [have_cdio=yes], [have_cdio=no])
AC_SUBST([CDIO_CFLAGS])
AC_SUBST([CDIO_LIBS])
AM_CONDITIONAL([HAVE_LIBCDIO], [test "$have_cdio" = "yes"])
if test "$have_cdio" = "yes" ; then
	AC_DEFINE([HAVE_LIBCDIO], 1, [Whether libcdio is available])
fi

# Find optional MusicBrainz3 and required Musicbrainz2
PKG_CHECK_MODULES(MUSICBRAINZ3, libmusicbrainz3 >= 3.0.2, [have_mb3=yes], [have_mb3=no])
AC_SUBST(MUSICBRAINZ3_CFLAGS)
AC_SUBST(MUSICBRAINZ3_LIBS)
AM_CONDITIONAL([HAVE_MUSICBRAINZ3], [test "$have_mb3" = "yes"])
if test "$have_mb3" = "yes" ; then
	AC_DEFINE([HAVE_MUSICBRAINZ3], 1, [Whether libmusicbrainz3 is available])
fi

PKG_CHECK_MODULES(MUSICBRAINZ, libmusicbrainz >= 2.1.3, [have_mb=yes], [have_mb=no])
AC_SUBST(MUSICBRAINZ_CFLAGS)
AC_SUBST(MUSICBRAINZ_LIBS)
AM_CONDITIONAL([HAVE_MUSICBRAINZ], [test "$have_mb" = "yes"])
if test "$have_mb" = "yes" ; then
	AC_DEFINE([HAVE_MUSICBRAINZ], 1, [Whether libmusicbrainz is available])
fi

if test "$have_mb" = "no" && test "$have_mb3" = "no" ; then
        AC_MSG_ERROR([Either libmusicbrainz or libmusicbrainz3 needs to be available for sound-juicer to build])
fi

oldlibs=$LIBS
LIBS="$LIBS $MUSICBRAINZ_LIBS"
AC_CHECK_FUNCS(mb_SetProxyCreds)
LIBS="$oldlibs"

oldlibs=$LIBS
LIBS="$LIBS $MUSICBRAINZ3_LIBS"
AC_CHECK_FUNCS(mb_extract_uuid)
LIBS="$oldlibs"

# Find gio for the metadata extractor
PKG_CHECK_MODULES(GIO, gio-2.0)
AC_SUBST(GIO_CFLAGS)
AC_SUBST(GIO_LIBS)

PKG_CHECK_MODULES(DBUS, dbus-1)
AC_SUBST(DBUS_CFLAGS)
AC_SUBST(DBUS_LIBS)

# Find how and where to put the GConf schemas
AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
if test "$GCONFTOOL" = "no"; then
        AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi
AM_GCONF_SOURCE_2


# Optionally enable G* deprecations
AC_MSG_CHECKING([whether to enable deprecation warnings])
AC_ARG_ENABLE([deprecations],
        [AS_HELP_STRING([--enable-deprecations],
        [enable deprecation warnings [default=no]])],
        [],[enable_deprecations=no])
AC_MSG_RESULT([$enable_deprecations])

if test "$enable_deprecations" = "no"; then
	DISABLE_DEPRECATED=""
	AC_SUBST(DISABLE_DEPRECATED)
fi

# We require Scroll Keeper 0.3.5 or above for the help
SCROLLKEEPER_BUILD_REQUIRED=0.3.5
AC_SUBST(SCROLLKEEPER_BUILD_REQUIRED)

AC_SUBST([AM_CPPFLAGS])
AC_SUBST([AM_CFLAGS])
AC_SUBST([AM_CXXFLAGS])
AC_SUBST([AM_LDFLAGS])

# Finally, generate the files
AC_CONFIG_FILES([
sound-juicer.spec
Makefile
data/Makefile
data/sound-juicer.desktop.in
help/Makefile
help/sound-juicer/Makefile
libjuicer/Makefile
po/Makefile.in
src/Makefile
tests/Makefile
])

AC_OUTPUT
